# Generated by Django 3.2 on 2023-04-17 14:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('reviews', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(db_index=True, max_length=256, verbose_name='Hазвание категории'),
        ),
        migrations.AlterField(
            model_name='genre',
            name='name',
            field=models.CharField(db_index=True, max_length=75, verbose_name='Hазвание жанра'),
        ),
        migrations.AlterField(
            model_name='genre',
            name='slug',
            field=models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(message='Слаг жанра содержит недопустимый символ!', regex='^[-a-zA-Z0-9_]+$')], verbose_name='slug'),
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, verbose_name='Hазвание произведения')),
                ('year', models.PositiveIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0, message='Год не может быть отрицательным'), django.core.validators.MaxValueValidator(2023, message='Введеный год не может быть больше текущего')], verbose_name='Год выпуска')),
                ('description', models.TextField(blank=True, verbose_name='Описание произведения')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='reviews.category', verbose_name='Категория произведения')),
                ('genre', models.ManyToManyField(blank=True, related_name='titles', to='reviews.Genre', verbose_name='Жанр произведения.')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
                'ordering': ('-year', 'name'),
            },
        ),
    ]
